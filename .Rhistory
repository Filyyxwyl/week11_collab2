geom_boxplot(aes(colour=Group)) + labs(x = "Ethnicity", y="30-second Chair Stand Test")+scale_x_discrete(breaks=c("AA", "W"),labels=c("Black or African American", "White"))
p3 <- ggplot(ces2, aes(x = factor(Sex), y = X30secCST))+
geom_boxplot(aes(colour=Group)) + labs(x = "Sex", y="30-second Chair Stand Test")+scale_x_discrete(breaks=c(1, 2),labels=c("Female", "Male"))
p4 <- ggplot(ces2, aes(x = Group, y = X30secCST))+
geom_boxplot(aes(colour=Group)) + labs(x = "Group", y="30-second Chair Stand Test")
# Scatterolot for X30secCST for basic covariates: age, 30 seconds stand test
p6 <- ggplot(ces2, aes(x = Age, y = X30secCST)) +
geom_point(aes(colour = Group)) +
geom_smooth(method = "lm")+
stat_cor(method = "pearson")+theme_classic()+ labs(x = "Group", y="30-second Chair Stand Test")+
facet_wrap(~Group)
p7 <- ggscatter(ces2, x = "Age", y = "X30secCST",
color = "Group",
add = "reg.line", conf.int = TRUE) + labs(x = "Group", y="30-second Chair Stand Test")+
stat_cor(aes(color = Group))
p1
p2
p3
p4
p6
p7
# 30-second Chair Stand Test unadjusted and adjusted plots
# Mean in different timepoints by group
y1 <- subset(subset(ces2,Timepoint == 1),Group == "SHAM")
y2 <- mean(as.numeric(as.character(y1$X30secCST)))
y3 <- subset(subset(ces2,Timepoint == 2),Group == "SHAM")
y4 <- mean(as.numeric(as.character(y3$X30secCST)))
y5 <- subset(subset(ces2,Timepoint == 3),Group == "SHAM")
y6 <- mean(as.numeric(as.character(y5$X30secCST)))
y7 <- subset(subset(ces2,Timepoint == 1),Group == "TRUE")
y8 <- mean(as.numeric(as.character(y7$X30secCST)))
y9 <- subset(subset(ces2,Timepoint == 2),Group == "TRUE")
y10 <- mean(as.numeric(as.character(y9$X30secCST)))
y11 <- subset(subset(ces2,Timepoint == 3),Group == "TRUE")
y12 <- mean(as.numeric(as.character(y11$X30secCST)))
x <- 1:3
y_X30secCST_SHAM <- c(y2,y4,y6)
y_X30secCST_TRUE <- c(y8,y10,y12)
# Unadjusted plot
plot(x, y_X30secCST_SHAM, type = "b", frame = FALSE, pch = 19,
col = "red", xaxt="n",xlab = "Timepoint", ylab = "30-second Chair Stand Test(unadjusted)", ylim = c(0,30), lwd = 2)
axis(side=1,at=c(1,2,3),labels=c("Baseline","6 weeks","12 weeks"))
lines(x, y_X30secCST_TRUE, pch = 17, col = "blue", type = "b", lwd = 2)
# Add each patient line
for (ii in 1:length(unique(ces2$ID))){
ces2$ID==unique(ces2$ID)[ii]
x <- as.numeric(ces2$Timepoint[which(ces2$ID==unique(ces2$ID)[ii])])
y <- as.numeric(ces2$X30secCST[which(ces2$ID==unique(ces2$ID)[ii])])
group <- ces2$Group[which(ces2$ID==unique(ces2$ID)[ii])][1]
if (isTRUE(group == "SHAM")==TRUE){
mycol="red"}
else{ mycol="blue"
}
if (isTRUE(group == "SHAM")==TRUE){
mypch=19}
else{ mypch=17
}
line <- lines(x, y, pch = mypch, col = mycol, type = "b",lty = 2)
}
legend("bottomleft", legend=c("SHAM group mean", "TRUE group mean"),
col=c("red", "blue"), lty = 1:1, cex=0.8)
## Create adjusted value
adjust_value <- ces2$X30secCST[ces2$Timepoint == 1]
adjust_ID <- ces2$ID[ces2$Timepoint == 1]
index <- data.frame(adjust_value,adjust_ID)
ces2$baseline <- 0
for (ii in 1:nrow(ces2)) {
ces2$baseline[ii] <-as.numeric(as.character(index$adjust_value[which(index$adjust_ID==ces2$ID[ii])]))
}
ces2$adjust <- as.numeric(as.character(ces2$X30secCST)) - as.numeric(as.character(ces2$baseline))
# Mean in different timepoints by group
y1 <- subset(subset(ces2,Timepoint == 1),Group == "SHAM")
y2 <- mean(as.numeric(as.character(y1$adjust)))
y3 <- subset(subset(ces2,Timepoint == 2),Group == "SHAM")
y4 <- mean(as.numeric(as.character(y3$adjust)))
y5 <- subset(subset(ces2,Timepoint == 3),Group == "SHAM")
y6 <- mean(as.numeric(as.character(y5$adjust)))
y7 <- subset(subset(ces2,Timepoint == 1),Group == "TRUE")
y8 <- mean(as.numeric(as.character(y7$adjust)))
y9 <- subset(subset(ces2,Timepoint == 2),Group == "TRUE")
y10 <- mean(as.numeric(as.character(y9$adjust)))
y11 <- subset(subset(ces2,Timepoint == 3),Group == "TRUE")
y12 <- mean(as.numeric(as.character(y11$adjust)))
x <- 1:3
y_DVPRS_SHAM <- c(y2,y4,y6)
y_DVPRS_TRUE <- c(y8,y10,y12)
# Adjusted plot
plot(x, y_DVPRS_SHAM, type = "b", frame = FALSE, pch = 19,
col = "red", xaxt="n",xlab = "Timepoint", ylab = "30-second Chair Stand Test(adjusted)", ylim = c(-3,4), lwd = 2)
axis(side=1,at=c(1,2,3),labels=c("Baseline","6 weeks","12 weeks"))
lines(x, y_DVPRS_TRUE, pch = 17, col = "blue", type = "b", lwd = 2)
legend("bottomleft", legend=c("SHAM group mean", "TRUE group mean"),
col=c("red", "blue"), lty = 1:1, cex=0.8)
suppressMessages(library(lmerTest))
# Treat subjects and group as categorical values
ces2$ID<-factor(ces2$ID)
ces2$Group<-factor(ces2$Group)
ces2$Group<-relevel(ces2$Group, ref="SHAM")
ces2$Sex <- factor(factor(ces2$Sex),levels = c(1,2),labels=c("Female", "Male"))
ces2[,1:13]
model_no_usage<-lmer(X30secCST~(1|ID)+Timepoint+Group+Sex+Ethnicity+Age,data=ces2)
summary(model_no_usage)
suppressMessages(confint(model_no_usage))
# add interaction
model_no_usage1<-lmer(X30secCST~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+Timepoint*Group,data=ces2)
summary(model_no_usage1)
suppressMessages(confint(model_no_usage1))
model_usage_c<-lmer(X30secCST~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage_avg_c,data=ces2)
summary(model_usage_c)
# add two interactions
model_usage_c1<-lmer(X30secCST~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage_avg_c+Timepoint*Group+usage_avg_c*Group,data=ces2)
summary(model_usage_c1)
model_usage<-lmer(X30secCST~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage_avg,data=ces2)
summary(model_usage)
suppressMessages(confint(model_usage))
#add two interactions
model_usage1<-lmer(X30secCST~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage_avg+Timepoint*Group+usage_avg*Group,data=ces2)
summary(model_usage1)
suppressMessages(confint(model_usage1))
model_usage_two<-lmer(X30secCST~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage_avg_1_12,data=ces2)
summary(model_usage_two)
suppressMessages(confint(model_usage_two))
# add interaction
model_usage_two1<-lmer(X30secCST~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage_avg_1_12+Timepoint*Group+usage_avg_1_12*Group,data=ces2)
summary(model_usage_two1)
suppressMessages(confint(model_usage_two1))
model_usage<-lmer(DVPRS~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage,data=ces2)
summary(model_usage) #Variables Time point and age are significant
suppressMessages(confint(model_usage))
#add two interactions
model_usage1<-lmer(DVPRS~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage+Timepoint*Group+usage*Group,data=ces2)
summary(model_usage1) #Variables Time point, age, usage(high) are significant
suppressMessages(confint(model_usage1))
model_usage<-lmer(PSQ1~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage,data=ces2)
summary(model_usage) #Variable Timepoint is significant
suppressMessages(confint(model_usage))
#add two interactions
model_usage1<-lmer(PSQ1~(1|ID)+Timepoint+Group+Sex+Age+Ethnicity+usage+Timepoint*Group+usage*Group,data=ces2)
summary(model_usage1) #Variable usage is significant
suppressMessages(confint(model_usage1))
model_all_1<-lmer(DVPRS~(1|ID)+Timepoint+Group+Sex+Ethnicity+Age+usage+AN3+PFA23+PFB1+Global06+NQSLP02,data=ces2)
summary(model_all_1) #Many significant variables
plot(ces2$PFB1,ces2$DVPRS,xlab='PFB1',ylab='DVPRS')
plot(ces2$NQSLP02,ces2$DVPRS,xlab='NQSLP02',ylab='DVPRS')
model_all_2<-lmer(PSQ1~(1|ID)+Timepoint+Group+Sex+Ethnicity+Age+usage+AN3+PFA23+PFB1+Global06+NQSLP02,data=ces2)
summary(model_all_2) #Only one significant variables
plot(ces2$PFB1,ces2$PSQ1,xlab='PFB1',ylab='PSQ1')
step(model_all_1, scope = list(upper=model_all_1, lower=~1), direction = "backward", trace=T)
step(model_all_2, scope = list(upper=model_all_2, lower=~1), direction = "backward", trace=T)
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F))
library(lmerTest)
library(mgcv)
library(tidyverse)
set.seed(1234)
id = c(1:50)
idlong = id%x%rep(1,5)
beta0=1
beta1=2
x = rnorm(250)
theta = rnorm(50,sd = sqrt(2))
thetalong=theta%x%rep(1,5)
y = beta0+beta1*x+thetalong+rnorm(250,mean=0,sd=sqrt(2))
simdata = data.frame(y,x,idlong)
fit = lmer(y~x+(1|idlong),data = simdata)
summary(fit)
ICC= 1.566/(1.566+2.202)
ICC
simdata$idlong <- as.factor(simdata$idlong)
fit_gam = gam(y~s(x)+s(idlong,bs='re'),data = simdata)
summary(fit_gam)
newd <- simdata[10,]
newd$x <- simdata$x[10]-1e-05
y1 <- predict(fit_gam,newd)
newd$x <- simdata$x[10]+1e-05
y2 <- predict(fit_gam,newd)
(y2-y1)/2e-05
plot(fit_gam)
library(itsadug)
plot_smooth(fit_gam,view='x')
#fitted vs. residual plots
plot(fit.infant , type = c("p", "smooth"))
fit_infant_gam = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+Sex, data  = infant)
#fitted vs. residual plots
plot(fit.infant , type = c("p", "smooth"))
infant = read.csv('infant_trajectories.csv',header = TRUE, stringsAsFactors=TRUE)
fit.infant <- lmer(WB_fa.combat~Corr_age+factor(Sex)+(1|Unique_ID),data = infant)
summary(fit.infant)
set.seed(1234)
id = c(1:50)
idlong = id%x%rep(1,5)
beta0=1
beta1=2
x = rnorm(250)
theta = rnorm(50,sd = sqrt(2))
thetalong=theta%x%rep(1,5)
y = beta0+beta1*x+thetalong+rnorm(250,mean=0,sd=sqrt(8))
simdata = data.frame(y,x,idlong)
fit_gamnew = gam(y~s(x)+s(as.factor(idlong),bs='re'),data = simdata)
summary(fit_gamnew)
infant = read.csv('infant_trajectories.csv',header = TRUE, stringsAsFactors=TRUE)
fit.infant <- lmer(WB_fa.combat~Corr_age+factor(Sex)+(1|Unique_ID),data = infant)
summary(fit.infant)
#fitted vs. residual plots
plot(fit.infant , type = c("p", "smooth"))
fit_infant_gam = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+Sex, data  = infant)
summary(fit_infant_gam)
ggplot(infant,aes(residuals(fit_infant_gam),predict(fit_infant_gam)))+
geom_point()+
geom_smooth(method = "loess")
gam.check(fit_infant_gam)
fit_infant_gam2 = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re',k=20)+Sex, data  = infant)
summary(fit_infant_gam2)
fit_infant_gam = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+Sex, data  = infant)
summary(fit_infant_gam)
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F))
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F'))
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',sim.ci=TRUE)
ggplot(infant, fit_infant_gam$fitted.values,fit_infant_gam$residuals)+
geom_point()+
geom_smooth(method = "loess")
ggplot(infant,fit_infant_gam$fitted.values,fit_infant_gam$residuals)+
geom_point()+
geom_smooth(method = "loess")
ggplot(infant,aes(fit_infant_gam$fitted.values,fit_infant_gam$residuals))+
geom_point()+
geom_smooth(method = "loess")
infant = read.csv('infant_trajectories.csv',header = TRUE, stringsAsFactors=TRUE)
fit.infant <- lmer(WB_fa.combat~Corr_age+factor(Sex)+(1|Unique_ID),data = infant)
summary(fit.infant)
fit_infant_gam = gam(WB_fa.combat~s(Corr_age)+Sex+s(Unique_ID,bs ='re'), data  = infant)
summary(fit_infant_gam)
ggplot(infant,aes(fit_infant_gam$fitted.values,fit_infant_gam$residuals))+
geom_point()+
geom_smooth(method = "loess")
ggplot(infant,aes(fit_infant_gam$fitted.values,fit_infant_gam$residuals))+
geom_point()+
geom_smooth()
ggplot(infant,aes(fit_infant_gam$fitted.values,fit_infant_gam$residuals))+
geom_point()+
geom_smooth(method = "loess")
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
p.adjust(2.676, method = "bonferroni")
newd <- infant[10,]
newd$x <- 10-1e-05
y1 <- predict(fit_infant_gam,newd)
newd$x <- 10+1e-05
y2 <- predict(fit_infant_gam,newd)
(y2-y1)/2e-05
newd <- infant[10,]
newd$Corr_age <- 10-1e-05
y1 <- predict(fit_infant_gam,newd)
newd$Corr_age <- 10+1e-05
y2 <- predict(fit_infant_gam,newd)
(y2-y1)/2e-05
newd <- infant[10,]
newd$Corr_age <- 150-1e-05
y1 <- predict(fit_infant_gam,newd)
newd$Corr_age <- 150+1e-05
y2 <- predict(fit_infant_gam,newd)
(y2-y1)/2e-05
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+Sex,method = "REML", data  = infant)
summary(fit_infant_mix)
itsadug::plot_smooth(fit_infant_mix,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+s(Unique_ID, sex, bs = 're'),,method = "REML", data  = infant)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+s(Unique_ID,sex, bs = 're'),method = "REML", data  = infant)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+s(Unique_ID,Sex, bs = 're'),method = "REML", data  = infant)
infant
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+s(Unique_ID,Sex, bs = 're'),method = "REML", data  = infant)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+s(Unique_ID, Sex, bs = 're'), method = "REML", data  = infant)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+s(Unique_ID, Corr_age, bs = 're'), method = "REML", data  = infant)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,sex,bs ='re'), method = "REML", data  = infant)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,Sex,bs ='re'), method = "REML", data  = infant)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,Corr_age,bs ='re')+Sex, method = "REML", data  = infant)
summary(fit_infant_mix)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,Corr_age,bs ='re')+Sex, method = "REML", data  = infant)
summary(fit_infant_mix)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+(Unique_ID,Corr_age,bs ='re')+Sex, method = "REML", data  = infant)
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,Corr_age,bs ='re')+Sex, method = "REML", data  = infant)
summary(fit_infant_mix)
itsadug::plot_smooth(fit_infant_mix,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
fit_infant_cubic <- gam(WB_fa.combat~s(Corr_age,bs ='cr')+s(Unique_ID)+Sex, method = "GCV.Cp", data  = infant)
fit_infant_cubic <- gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='cr')+Sex, method = "GCV.Cp", data  = infant)
fit_infant_cubic <- gam(WB_fa.combat~s(Corr_age,bs ='cr')+s(Unique_ID)+Sex, method = "GCV.Cp", data  = infant)
fit_infant_cubic <- gam(WB_fa.combat~s(Corr_age,bs ='cr')+s(Unique_ID,bs = 're')+Sex, method = "GCV.Cp", data  = infant)
fit_infant_cubic <- gam(WB_fa.combat~s(Corr_age,bs ='cr')+s(Unique_ID,bs = 're')+Sex, method = "GCV.Cp", data  = infant)
summary(fit_infant_cubic)
itsadug::plot_smooth(fit_infant_cubic,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
plot(fit_infant_gam)
plot(fit_infant_gam)
itsadug::plot_smooth(fit_infant_cubic,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
plot(fit_infant_gam)+plot_smooth(fit_infant_cubic,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
plot(fit_infant_gam)[1]
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
itsadug::plot_smooth(fit_infant_cubic,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)+
itsadug::plot_smooth(fit_infant_cubic,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
fit_infant_cubic <- gam(WB_fa.combat~s(Corr_age,bs ='cr')+s(Unique_ID,bs = 're')+Sex, method = "GCV.Cp", data  = infant)
library(lmerTest)
library(mgcv)
library(tidyverse)
set.seed(1234)
id = c(1:50)
idlong = id%x%rep(1,5)
beta0=1
beta1=2
x = rnorm(250)
theta = rnorm(50,sd = sqrt(2))
thetalong=theta%x%rep(1,5)
y = beta0+beta1*x+thetalong+rnorm(250,mean=0,sd=sqrt(2))
simdata = data.frame(y,x,idlong)
fit = lmer(y~x+(1|idlong),data = simdata)
summary(fit)
ICC= 1.566/(1.566+2.202)
ICC
simdata$idlong <- as.factor(simdata$idlong)
fit_gam = gam(y~s(x)+s(idlong,bs='re'),data = simdata)
summary(fit_gam)
newd <- simdata[10,]
newd$x <- simdata$x[10]-1e-05
y1 <- predict(fit_gam,newd)
newd$x <- simdata$x[10]+1e-05
y2 <- predict(fit_gam,newd)
(y2-y1)/2e-05
plot(fit_gam)
library(itsadug)
plot_smooth(fit_gam,view='x')
set.seed(1234)
id = c(1:50)
idlong = id%x%rep(1,5)
beta0=1
beta1=2
x = rnorm(250)
theta = rnorm(50,sd = sqrt(2))
thetalong=theta%x%rep(1,5)
y = beta0+beta1*x+thetalong+rnorm(250,mean=0,sd=sqrt(8))
simdata = data.frame(y,x,idlong)
fit_gamnew = gam(y~s(x)+s(as.factor(idlong),bs='re'),data = simdata)
summary(fit_gamnew)
infant = read.csv('infant_trajectories.csv',header = TRUE, stringsAsFactors=TRUE)
fit.infant <- lmer(WB_fa.combat~Corr_age+factor(Sex)+(1|Unique_ID),data = infant)
summary(fit.infant)
#fitted vs. residual plots
plot(fit.infant , type = c("p", "smooth"))
fit_infant_gam = gam(WB_fa.combat~s(Corr_age)+Sex+s(Unique_ID,bs ='re'), data  = infant)
summary(fit_infant_gam)
ggplot(infant,aes(fit_infant_gam$fitted.values,fit_infant_gam$residuals))+
geom_point()+
geom_smooth(method = "loess")
gam.check(fit_infant_gam)
fit_infant_gam2 = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re',k=20)+Sex, data  = infant)
summary(fit_infant_gam2)
fit_infant_gam = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+Sex, data  = infant)
summary(fit_infant_gam)
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F'),col='blue')
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE, col = "green")
qnorm(1-(0.05/2/30))
newd <- infant[10,]
newd$Corr_age <- 10-1e-05
y1 <- predict(fit_infant_gam,newd)
newd$Corr_age <- 10+1e-05
y2 <- predict(fit_infant_gam,newd)
(y2-y1)/2e-05
newd <- infant[10,]
newd$Corr_age <- 150-1e-05
y1 <- predict(fit_infant_gam,newd)
newd$Corr_age <- 150+1e-05
y2 <- predict(fit_infant_gam,newd)
(y2-y1)/2e-05
fit_infant_mix = gam(WB_fa.combat~s(Corr_age)+s(Unique_ID,bs ='re')+Sex, method = "REML", data  = infant)
summary(fit_infant_mix)
itsadug::plot_smooth(fit_infant_mix,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE)
fit_infant_cubic <- gam(WB_fa.combat~s(Corr_age,bs ='cr')+s(Unique_ID,bs = 're')+Sex, method = "GCV.Cp", data  = infant)
summary(fit_infant_cubic)
itsadug::plot_smooth(fit_infant_gam,view = 'Corr_age',cond=list(Sex='F'),col = 'red')
itsadug::plot_smooth(fit_infant_cubic,view = 'Corr_age',cond=list(Sex='F'),sim.ci=TRUE,col= 'blue',add = TRUE)
setwd("D:/homework and notes 2022 fall/toolkit/week11/class")
setwd("D:/homework and notes 2022 fall/toolkit/week11/col_renv")
getwd()
"renv" %in% row.names(installed.packages())
setwd("D:/homework and notes 2022 fall/toolkit/week11/col_renv/week11")
"renv" %in% row.names(installed.packages())
renv::restore()
renv::restore()
here::i_am(
"code/01_make_output.R"
)
here::i_am(
"code/01_make_output.R"
)
set.seed(1)
random_numbers1 <- rnorm(100)
saveRDS(
random_numbers1,
file = here::here("output", "random_numbers1.rds")
)
set.seed(2)
random_numbers2 <- rgamma(100, shape = 1)
saveRDS(
random_numbers2,
file = here::here("output", "random_numbers2.rds")
)
set.seed(3)
random_numbers3 <- runif(100)
saveRDS(
random_numbers3,
file = here::here("output", "random_numbers3.rds")
)
here::i_am(
"code/02_render_report.R"
)
rmarkdown::render(
here::here("report.Rmd")
)
---
title: Three sets of random numbers
author: You
output: html_document
---
---
title: Three sets of random numbers
author: You
output: html_document
---
```{r, here-i-am, include = FALSE}
here::i_am(
"report.Rmd"
)
```
```{r, load-random-numbers, include = FALSE}
#! TO DO:
#!   read random_numbers1 from output directory
random_numbers1 <- readRDS(
here::here("output/random_numbers1.rds")
)
#! TO DO:
#!   read random_numbers2 from output directory
random_numbers2 <- readRDS(
here::here("output/random_numbers2.rds")
)
#! TO DO:
#!   read random_numbers3 from output directory
random_numbers3 <- readRDS(
here::here("output/random_numbers3.rds")
)
```
# A scatter plot
```{r, random-numbers1-histogram}
#| fig.cap = "Scatter plot of random numbers",
#| echo = FALSE
random_numbers3_quantiles <- quantile(
random_numbers3,
seq(0, 1, length = 5)
)
random_numbers3_breaks <- as.numeric(
cut(
random_numbers3,
breaks = random_numbers3_quantiles,
include.lowest = TRUE
)
)
colors <- 1:4
point_color <- colors[random_numbers3_breaks]
plot(
x = random_numbers1, y = random_numbers2,
col = point_color,
bty = "n", pch = 19
)
```
here::i_am(
"report.Rmd"
)
#! TO DO:
#!   read random_numbers1 from output directory
random_numbers1 <- readRDS(
here::here("output/random_numbers1.rds")
)
#! TO DO:
#!   read random_numbers2 from output directory
random_numbers2 <- readRDS(
here::here("output/random_numbers2.rds")
)
#! TO DO:
#!   read random_numbers3 from output directory
random_numbers3 <- readRDS(
here::here("output/random_numbers3.rds")
)
#| fig.cap = "Scatter plot of random numbers",
#| echo = FALSE
random_numbers3_quantiles <- quantile(
random_numbers3,
seq(0, 1, length = 5)
)
random_numbers3_breaks <- as.numeric(
cut(
random_numbers3,
breaks = random_numbers3_quantiles,
include.lowest = TRUE
)
)
colors <- 1:4
point_color <- colors[random_numbers3_breaks]
plot(
x = random_numbers1, y = random_numbers2,
col = point_color,
bty = "n", pch = 19
)
getwd()
setwd("D:/homework and notes 2022 fall/toolkit/week11/col_renv/week11")
"renv" %in% row.names(installed.packages())
renv::restore()
install.packages("devtools")
